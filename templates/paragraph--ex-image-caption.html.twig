{#
/**
 * @file
 * Default theme implementation to display a paragraph in Bootstrap Paragraphs.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}




{% set img_url = file_url(paragraph.field_ex_image.entity.uri.value) %}



{# The template default set classes. #}
{# Sets Paragraph ID as class. #}
{%
set classes = [
'paragraph',
'exhibit-image',
]
%}



<div {{ attributes.addClass(classes) }}>
    <div class="full-image">
       <img src="{{ img_url }}" alt="{{ content.field_ex_image['#items'].alt }}" >
        {% if content.field_ex_image['#items'].title %}
        <div class="image-caption">
            <button class="image-caption--trigger js-image-caption--trigger">
                <svg class="info" id="b" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 15.5 15.25">
                    <g id="c"><svg id="b" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 15.5 15.25">
                            <g id="c">
                                <path d="m6.32,10.79l.9-.17c.01-.6.02-1.39.02-1.92v-.56c0-.66-.01-1.03-.04-1.51l-.96-.11v-.42l1.85-.73.18.12-.04,1.63v1.58c0,.53.01,1.32.02,1.92l.84.17v.43h-2.78v-.43Zm.61-7.51c0-.47.35-.77.8-.77s.8.3.8.77c0,.44-.36.77-.8.77s-.8-.32-.8-.77Z" fill="#currentColor" stroke="#currentColor" />
                                <path d="m15,7.57c0,3.96-3.34,7.18-7.31,7.18S.5,11.53.5,7.57,3.73.5,7.69.5s7.31,3.11,7.31,7.07Z" fill="none" stroke="#currentColor" stroke-miterlimit="0" />
                            </g>
                        </svg>
            </button>
            <div class="image-caption__drawer js-image-caption--hidden" aria-hidden="true">
                <p>{{ content.field_ex_image['#items'].title }}</p>
            </div>
        </div>
        {% else %}
        {% endif %}
    </div>

</div>
