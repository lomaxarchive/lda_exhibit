{#
/**
 * @file
 * Default theme implementation to display a paragraph in Bootstrap Paragraphs.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}



{# The template default set classes. #}
{# Sets Paragraph ID as class. #}
{% set sectionID = paragraph.field_section_heading.value|clean_class %}
{% set sectionTooltip = paragraph.field_section_heading.value %}
{%
set classes = [
'js-section',
'paragraph--type--' ~ paragraph.bundle|clean_class,
'section',
]
%}

{% set hero_bg_img_url = file_url(paragraph.field_card_section_hero_img.entity.uri.value) %}
{% set hero = paragraph.field_is_hero.value %}

<section {{ attributes.addClass(classes) }} id="{{ sectionID }}" data-anchor="{{ sectionID }}" data-tooltip="{{ sectionTooltip }}">
    {% if hero == "1" %}
    <div class="section-hero text-effect-2" style="background-image: linear-gradient(45deg, #1a162b, #0000005c), url({{ hero_bg_img_url }}); ">
        <div class="section-hero-title fade-in">
            <h1> {{ content.field_section_heading.0 }} </h1>
        </div>
    </div>
    {% else %}
    {# 
    <h2 class="section-title container"> {{ content.field_section_heading.0 }}</h2> 
    #}
    <div class="spacer"></div>
    {% endif %}
    {{ content.field_section_in_card }}
    <button class="js-next-section next-section" title="Next Page">
        <svg id="b" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 56.53 45.01">
            <g id="c">
                <path d="m4.06,4.3c6.51,6.51,13.02,13.02,19.53,19.53.93.93,1.85,1.85,2.78,2.78,2.28,2.28,5.81-1.26,3.54-3.54-6.51-6.51-13.02-13.02-19.53-19.53-.93-.93-1.85-1.85-2.78-2.78-2.28-2.28-5.81,1.26-3.54,3.54h0Z" fill="#currentColor" />
                <path d="m30.1,26.64L49.68,7.06c.93-.93,1.86-1.86,2.79-2.79,2.28-2.28-1.26-5.81-3.54-3.54-6.53,6.53-13.05,13.05-19.58,19.58l-2.79,2.79c-2.28,2.28,1.26,5.81,3.54,3.54h0Z" fill="#currentColor" />
                <path d="m.74,18.63c7.48,7.48,14.96,14.96,22.44,22.44,1.06,1.06,2.12,2.12,3.18,3.18,2.28,2.28,5.81-1.26,3.54-3.54-7.48-7.48-14.96-14.96-22.44-22.44-1.06-1.06-2.12-2.12-3.18-3.18-2.28-2.28-5.81,1.26-3.54,3.54h0Z" fill="#currentColor" />
                <path d="m30.12,44.27c7.5-7.5,14.99-14.99,22.49-22.49,1.06-1.06,2.12-2.12,3.19-3.19,2.28-2.28-1.26-5.81-3.54-3.54-7.5,7.5-14.99,14.99-22.49,22.49-1.06,1.06-2.12,2.12-3.19,3.19-2.28,2.28,1.26,5.81,3.54,3.54h0Z" fill="#currentColor" />
            </g>
        </svg>
    </button>
</section>
